# -*- coding: utf-8 -*-
"""walmarthackathon2023.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12lIsvnbT-OJdFCVR8-drETCB9cBg32CC
"""

import streamlit as st

# Front Page
st.title("Walmart Hackathon")
st.header("Problem Statement: Supply Chain and Analysis Approach")
st.write("Write a brief description of the problem statement.")

# Inventory Optimization Section
st.sidebar.title("Navigation")
section = st.sidebar.radio("Go to", ("Home", "Inventory Optimization", "Store Optimization", "Warehouse Optimization"))

if section == "Inventory Optimization":
    st.header("Inventory Optimization")

    # Add your inventory optimization code here

    # Display image
    #inventory_image = "path_to_inventory_image.png"  # Replace with your image path
    #st.image(inventory_image, use_column_width=True)

    # Explain the model and results
    st.subheader("Inventory Optimization Model")
    st.write("Explain your inventory optimization model and its approach.")
    st.write("Accuracy of the Model: XX%")  # Replace with your accuracy

    # Add more content as needed

# Store Optimization Section
elif section == "Store Optimization":
    st.header("Store Optimization")

    # Add your store optimization code here

    # Display image
    #store_image = "path_to_store_image.png"  # Replace with your image path
    #st.image(store_image, use_column_width=True)

    # Tabs for different models
    store_tabs = st.sidebar.radio("Select Model", ("Model 1", "Model 2", "Model 3"))

    if store_tabs == "Model 1":
        st.subheader("Store Optimization Model 1")
        st.write("Explain your first store optimization model and its approach.")

    elif store_tabs == "Model 2":
        st.subheader("Store Optimization Model 2")
        st.write("Explain your second store optimization model and its approach.")

    elif store_tabs == "Model 3":
        st.subheader("Store Optimization Model 3")
        st.write("Explain your third store optimization model and its approach.")

    # Add more content as needed

# Warehouse Optimization Section
elif section == "Warehouse Optimization":
    st.header("Warehouse Optimization")

    # Add your warehouse optimization code here

    # Display image
    #warehouse_image = "path_to_warehouse_image.png"  # Replace with your image path
    #st.image(warehouse_image, use_column_width=True)

    # Tabs for different models
    warehouse_tabs = st.sidebar.radio("Select Model", ("Warehouse Storage Location", "Model B"))
    
    if warehouse_tabs == "Warehouse Storage Location":
        np.random.seed(0)
        num_products = 100
        num_warehouses = 5
        product_ids = np.arange(num_products)
        demand_patterns = np.random.randint(1, 11, size=(num_products, num_warehouses))  # Generate demand patterns for each product and warehouse
        n_clusters = 3
        kmeans = KMeans(n_clusters=n_clusters, random_state=0)
        cluster_labels = kmeans.fit_predict(demand_patterns)
        products = pd.DataFrame({'ProductID': product_ids,'ClusterLabel': cluster_labels})
        warehouses = pd.DataFrame({'WarehouseID': np.arange(num_warehouses),'Latitude': np.random.uniform(37.0, 40.0, num_warehouses),'Longitude': np.random.uniform(-125.0, -121.0, num_warehouses)})
        product_warehouse = pd.merge(products, warehouses, how='cross')
        st.title("Warehouse Layout Optimization")
        selected_warehouse = st.selectbox("Select a Warehouse:", warehouses['WarehouseID'])
        selected_data = product_warehouse[product_warehouse['WarehouseID'] == selected_warehouse]
        st.write(f"Warehouse Layout Map for Warehouse {selected_warehouse}")
        fig, ax = plt.subplots(figsize=(10, 6))
        ax.scatter(warehouses['Longitude'], warehouses['Latitude'], c='red', marker='s', label='Warehouses')
        for warehouse in warehouses.itertuples():
            ax.annotate(warehouse.WarehouseID, (warehouse.Longitude, warehouse.Latitude), textcoords="offset points", xytext=(0, 10), ha='center')
        ax.scatter(selected_data['Longitude'], selected_data['Latitude'], c=selected_data['ClusterLabel'], cmap='viridis', marker='o', label='Products')
        for product in selected_data.itertuples():
            ax.annotate(product.ProductID, (product.Longitude, product.Latitude), textcoords="offset points", xytext=(0, 5), ha='center', fontsize=8, color='black')
        ax.set_xlabel('Longitude')
        ax.set_ylabel('Latitude')
        ax.set_title(f'Optimized Warehouse Layout for Warehouse {selected_warehouse}')
        ax.legend()
        st.pyplot(fig)

    elif warehouse_tabs == "Model B":
        st.subheader("Warehouse Optimization Model B")
        st.write("Explain your second warehouse optimization model and its approach.")

    # Add more content as needed

# Home Section
else:
    st.write("Welcome to the Walmart Hackathon website!")
    st.write("Use the sidebar to navigate to different sections.")

# Display any additional content or images as needed
